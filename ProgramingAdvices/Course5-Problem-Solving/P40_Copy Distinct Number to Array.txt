#include <iostream>
#include <cstdlib>
#include <ctime>
#include <cmath>
using namespace std;

void FillArray(int arr[], int& arrLength) {
    arrLength = 10;
    arr[0] = 10;
    arr[1] = 10;
    arr[2] = 10;
    arr[3] = 50;
    arr[4] = 50;
    arr[5] = 70;
    arr[6] = 70;
    arr[7] = 70;
    arr[8] = 70;
    arr[9] = 90;
}

void PrintArray(int arr[], int arrLength) {
    for (int i = 0; i < arrLength; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

short FindNumberPositionInArray(int Number, int arr[100], int arrLength) {
    for (int i = 0; i < arrLength; i++) {
        if (arr[i] == Number)
            return i;
    }
    return -1;
}

bool IsNumberInArray(int number, int arr[100], int arrlength) {
    return FindNumberPositionInArray(number, arr, arrlength) != -1;
}

void AddArrayElement(int number, int arr[100], int& arrlength) {
    arrlength++;
    arr[arrlength - 1] = number;
}

void CopyDistinctNumbersToArray(int arrSource[100], int arrDestination[100], int& SourceLength, int& DestinationLength) {
    for (int i = 0; i < SourceLength; i++) {
        if (!IsNumberInArray(arrSource[i], arrDestination, DestinationLength)) {
            AddArrayElement(arrSource[i], arrDestination, DestinationLength);
        }
    }
}

int main() {
    srand((unsigned)time(NULL));
    int arrSource[100];
    int SourceLength = 0;
    int arrDestination[100];
    int DestinationLength = 0;
    FillArray(arrSource, SourceLength);

    cout << "\nArray Elements: " << endl;
    PrintArray(arrSource, SourceLength);

    CopyDistinctNumbersToArray(arrSource, arrDestination, SourceLength, DestinationLength);

    cout << "\nArray 2 distinct elements: " << endl;
    PrintArray(arrDestination, DestinationLength);

    return 0;
}