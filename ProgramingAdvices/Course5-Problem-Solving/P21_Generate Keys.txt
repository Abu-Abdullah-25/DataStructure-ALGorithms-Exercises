#include<iostream>
#include<string>
#include<cstdlib>
using namespace std;

enum enCharType
{
    SmallLetter = 1,
    CapitalLetter = 2,
    SpecialCar = 3,
    Digit = 4
};

int RandomNumber(int from, int To)
{
    // Function to generate a random number
    int Randum = rand() % (To - from + 1) + from;
    return Randum;
}

char GetRandomCharacter(enCharType CharType)
{
    switch (CharType)
    {
        case enCharType::SmallLetter:
            return char(RandomNumber(97, 122));
            break;
        
        case enCharType::CapitalLetter:
            return char(RandomNumber(65, 90));
            break;
        
        case enCharType::SpecialCar:
            return char(RandomNumber(33, 47));
            break;
        
        case enCharType::Digit:
            return char(RandomNumber(48, 57));
            break;
        
        default:
            break;
    }
}

int ReadPositiveNumber(string Message)
{
    int Number = 0;
    do
    {
        cout << Message << endl;
        cin >> Number;
    } while (Number <= 0);
    return Number;
}

string GenerateWord(enCharType CharType, short length)
{
    string word;
    for (int i = 1; i <= length; i++)
    {
        word = word + GetRandomCharacter(CharType);
    }
    return word;
}

string GenerateKey()
{
    string Key = "";
    Key = GenerateWord(enCharType::CapitalLetter, 4) + "-";
    Key = Key + GenerateWord(enCharType::CapitalLetter, 4) + "-";
    Key = Key + GenerateWord(enCharType::CapitalLetter, 4) + "-";
    Key = Key + GenerateWord(enCharType::CapitalLetter, 4);
    return Key;
}

void GenerateKeys(short NumberOfKeys) 
{
    for (int i = 1; i <= NumberOfKeys; i++)
    {
        cout << "Key [" << i << "]: ";
        cout << GenerateKey() << endl;
    }
}

int main() 
{
    // Seed the random number generator in C++, called only once
    srand((unsigned)time(NULL));
    
    GenerateKeys(ReadPositiveNumber("Please enter a positive number"));
    
    return 0;
}