#include <iostream>
#include <cstdlib>
#include <ctime>
#include <cmath>
using namespace std;

enum enprimeOrNot {
    prime = 1,
    notPrime = 2
};

enprimeOrNot CheckIsPrime(int n) {
    if (n == 1) {
        return enprimeOrNot::notPrime;
    }
    int m = round(sqrt(n));
    for (int i = 2; i <= m; i++) {
        if (n % i == 0)
            return enprimeOrNot::notPrime;
    }
    return enprimeOrNot::prime;
}

int RandomNumber(int From, int To) {
    // Function to generate a random number
    int randNum = rand() % (To - From + 1) + From;
    return randNum;
}

void FillArrayWithRandomNumbers(int arr[], int& arrLength) {
    cout << "Enter the number of elements: ";
    cin >> arrLength;
    while (arrLength <= 0) {
        cout << "Invalid input. Please enter a positive number of elements: ";
        cin >> arrLength;
    }
    for (int i = 0; i < arrLength; i++) {
        arr[i] = RandomNumber(1, 100);
    }
}

void PrintArray(const int arr[], int arrLength) {
    for (int i = 0; i < arrLength; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

void AddArrayElement(int number, int arr[100], int& arrlength) {
    // its a new element so we need to add the length by 1
    arrlength++;
    arr[arrlength - 1] = number;
}

void CopyPrimeNumbers(int arrSource[100], int arrDestination[100], int arrLength, int& arrDestinationLength) {
    for (int i = 0; i < arrLength; i++) {
        if (CheckIsPrime(arrSource[i]) == enprimeOrNot::prime)
            AddArrayElement(arrSource[i], arrDestination, arrDestinationLength);
    }
}

int main() {
    srand((unsigned)time(NULL)); // Seeds the random number generator
    int arr[100];
    int arrLength = 0, arrLength2 = 0;
    FillArrayWithRandomNumbers(arr, arrLength);
    int arr2[100];
    CopyPrimeNumbers(arr, arr2, arrLength, arrLength2);

    cout << "\nArray Elements: " << endl;
    PrintArray(arr, arrLength);

    cout << "\nArray 2 elements Prime numbers: " << endl;
    PrintArray(arr2, arrLength2);

    return 0;
}