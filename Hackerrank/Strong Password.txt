
enum enCharType { SamallLetter = 1, CapitalLetter = 2, Digit = 3 , SpecialCharacter = 4};

bool IsAStringContainsCharType(string S1, enCharType CharType)
{
    for (short i = 0; i < S1.length(); i++)
    {
        if (CharType == enCharType::Digit && isdigit(S1[i]))
            return true;

        if (CharType == enCharType::CapitalLetter && isupper(S1[i]))
            return true;

        if (CharType == enCharType::SamallLetter && islower(S1[i]))
            return true;

        if (CharType == enCharType::SpecialCharacter && (int(S1[i]) >= 33 && int(S1[i]) <= 47))
            return true;
    }

    return false;
}

int minimumNumber(int n, string password)
{
    // Return the minimum number of characters to make the password strong

    short Count = 0; 
    short RequiredLength = 6;
     
    if (!IsAStringContainsCharType(password,enCharType::Digit))
    {
        password += '4';
        Count++;
    }
    if (!IsAStringContainsCharType(password, enCharType::CapitalLetter))
    {
        password += 'G';
        Count++;
    }
    if (!IsAStringContainsCharType(password, enCharType::SamallLetter))
    {
        password += 'g';
        Count++;
    }
    if (!IsAStringContainsCharType(password, enCharType::SpecialCharacter))
    {
        password += '#';
        Count++;
    }

    return (password.length() >= RequiredLength ) ? Count : (RequiredLength - password.length() + Count);
}